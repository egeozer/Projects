import javax.swing.*;
import java.awt.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
public class gameHangMan extends JFrame {	//class Chess
	static String mode = "";	//static instance variables
	static String string = "";
	static String hiddenString = "";
	static String letter = "";
	static int countMiss = 0;
	static JLabel label = new JLabel();
	static String option = "Y";
	
	
	public gameHangMan() throws FileNotFoundException {	//default constructor
		

		
		Panel name = new Panel();	//invoking Panel()

		
	
	}
	
	public static void main(String[] args) throws FileNotFoundException {	//main method
		
		gameHangMan frame = new gameHangMan();
		
		frame.setVisible(true);
		frame.setDefaultCloseOperation(EXIT_ON_CLOSE);
		frame.setSize(250,350);
	
		frame.setLocationRelativeTo(null);
		frame.add(new Panel());

		File file = new File("G:/New folder/BinaryIO/Untitled 1");	//getting file
		Scanner input = null;	//declaring Scanner
		try {
			input = new Scanner(file);	//initializing input to the file
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Scanner input1 = new Scanner(System.in);	//creating second Scanner to get user input
		System.out.println("How do you want the words to be generated?" +		//instructions for the user
				"\n Type 'ramdom' if you want the words to be randomly generated by computer\n" +
				" or type 'custom' if you want to read words from a custom file");
		mode = input1.nextLine();	//mode can be either random or custom
		
		if(mode.equals("random")){	//case user selects random, a random word will be generated
			int size = 3+(int)(Math.random()*7);	//size is generated randomly
			for(int i =0; i<size;i++){
				string+=(char)(97+(Math.random()*25));	//from a to z, the word is stored into string variable
				hiddenString +=(char)42;	//hiddenString is also created with asteriks(depending on the size)
			}
			StringBuilder h = new StringBuilder(hiddenString);	//creating a stringbuilder to modify the hiddenString char by char
			label = new JLabel(h.toString());	//initializing label to print on screen
			frame.add(label, BorderLayout.SOUTH);	//adding label to the bottom of frame
			frame.validate();	//update frame
			
			System.out.println(string);
			System.out.println(hiddenString);
			System.out.println("Enter a letter");
			
			OUTER:while(option.equals("Y")){	//while user wants to keep playing, it will loop through this while loop
			System.out.println("Enter");
				letter = input1.nextLine();	//letter is the letter the user inputs
				
			
				for(int i =0; i<size;i++){	//loops through the word
					
					if(string.indexOf(letter,i)!=-1){	//if the letter matches one of the letters
						frame.remove(label);	//label is removed temporarily
						try{
						h.setCharAt(string.indexOf(letter,i),letter.charAt(0));	//modyfying the hiddenString to update it
						}
						catch(Exception ex){
							System.out.println("Please insert a correct letter");
						}
						label = new JLabel(h.toString());	//setting label again
						frame.add(label, BorderLayout.SOUTH);
						frame.validate();	//updating frame
						
					}
					 
					else if(string.indexOf(letter)==-1){	//if the letter does not match the the letter in the word, countMiss variable increments
						countMiss++;
						
						if(countMiss==1){	//depending on the number of misses, the panels get reupdated
							frame.getContentPane().removeAll();
							frame.add(new Panel());
							frame.setSize(250,350);
							//label = new JLabel(h.toString());
							frame.add(label, BorderLayout.SOUTH);
							frame.validate();
						}
						if(countMiss==2){
							frame.getContentPane().removeAll();
							frame.add(new Panel());
							frame.setSize(250,350);
							//label = new JLabel(h.toString());
							frame.add(label, BorderLayout.SOUTH);

							frame.validate();
							
							
						}
							
							
						if(countMiss==3){
										
				frame.getContentPane().removeAll();
							frame.add(new Panel());
							frame.setSize(250,350);
							//label = new JLabel(h.toString());
							frame.add(label, BorderLayout.SOUTH);
							frame.validate();
							
						}
						if(countMiss==4){	//if countmisses reaches 4, it gets out of the loop
							
							break;
										
									}
						
						System.out.println(countMiss);
						letter = input1.nextLine();	//asking the user input again
						
					}
				}
			
				System.out.println(h);
				if(string.equals(h.toString()) && option.equals("Y")){	//if string equals to the word, JLabel is updated
					System.out.println("You Win! The Word was: "+string);
					frame.remove(label);
					label = new JLabel("You Win! The Word was: "+string);
					frame.add(label,  BorderLayout.SOUTH);
					frame.validate();
					
					
					System.out.println("play again? Y or N");	//asking user to play again
					option = input1.nextLine();
					
					if(option.equals("Y")){	//if person says yes("Y") all values are reset and a new random word is generated
						frame.getContentPane().removeAll();
						frame.add(new Panel());
						//frame.remove(label);
						countMiss=0;
						
						
					 size = 3+(int)(Math.random()*7);
					 string = "";
					 hiddenString = "";
					for(int j =0; j<size;j++){
						string+=(char)(97+(Math.random()*25));
						hiddenString +=(char)42;
					} 
					h = new StringBuilder(hiddenString);
					label = new JLabel(h.toString());
					frame.add(label, BorderLayout.SOUTH);
					frame.validate();
					System.out.println(string);
					System.out.println(hiddenString);
					
					}
					
					
				}
				else if(countMiss==4){	//same process is applied here, if person looses, game wil las the user to play again
					System.out.println("You Lose! four misses!");
					frame.remove(label);
					label = new JLabel("You Lose! four misses!");
					frame.add(label,  BorderLayout.SOUTH);
					frame.validate();
					
					
					
					frame.getContentPane().removeAll();
					frame.add(new PanelHang());
					frame.setSize(250,350);
					//label = new JLabel(h.toString());
					frame.add(label, BorderLayout.SOUTH);
					frame.validate();
					System.out.println("play again? Y or N");
					option = input1.nextLine();
					
					if(option.equals("Y")){
						frame.getContentPane().removeAll();
						frame.add(new Panel());
						//frame.remove(label);
						countMiss=0;
						
						
					 size = 3+(int)(Math.random()*7);
					 string = "";
					 hiddenString = "";
					for(int j =0; j<size;j++){
						string+=(char)(97+(Math.random()*25));
						hiddenString +=(char)42;
					} 
					h = new StringBuilder(hiddenString);
					label = new JLabel(h.toString());
					frame.add(label, BorderLayout.SOUTH);
					frame.validate();
					System.out.println(string);
					System.out.println(hiddenString);
					
					}
					
				}
			}
			
			
			
				System.out.println("Thanks for playing!");	//if user presses N for no, the game will exit
				System.exit(0);
			
			
		}
		
		if(mode.equals("custom")){	//same logic is applied for custom mode, however, the word is taken from a text file
			
			
			if(input.hasNext())	//case user selects custom, line by line, the word will be taken from a custom file
			string= input.next() ;
			//System.out.println(string);
			for(int i =0; i<string.length();i++){
				hiddenString +=(char)42;
			}
			StringBuilder h = new StringBuilder(hiddenString);
			label = new JLabel(h.toString());
			System.out.println(h);
			frame.add(label, BorderLayout.SOUTH);
			
			frame.validate();
			OUTER:while(option.equals("Y")){
				System.out.println("enter");
				letter = input1.nextLine();
				
				for(int i =0; i<string.length();i++){
					//System.out.println(string.indexOf(letter,i));
						
						if(string.indexOf(letter,i)!=-1){	
							frame.remove(label);	
							try{
							h.setCharAt(string.indexOf(letter,i),letter.charAt(0));		
							}
							catch(Exception ex){
								System.out.println("Please insert a correct letter");
							}
							label = new JLabel(h.toString());					
							frame.add(label, BorderLayout.SOUTH);					
							frame.validate();
						
					}
					
					
					
					 
					else if(string.indexOf(letter)==-1){
						countMiss++;
						
						if(countMiss==1){
							frame.getContentPane().removeAll();
							frame.add(new Panel());
							frame.setSize(250,350);
							//label = new JLabel(h.toString());
							frame.add(label, BorderLayout.SOUTH);
							frame.validate();
						}
						if(countMiss==2){
							frame.getContentPane().removeAll();
							frame.add(new Panel());
							frame.setSize(250,350);
							//label = new JLabel(h.toString());
							frame.add(label, BorderLayout.SOUTH);

							frame.validate();
							
							
						}
							
							
						if(countMiss==3){
										
				frame.getContentPane().removeAll();
							frame.add(new Panel());
							frame.setSize(250,350);
							//label = new JLabel(h.toString());
							frame.add(label, BorderLayout.SOUTH);
							frame.validate();
							
						}
						if(countMiss==4){
							
							break;
										
									}
						
						System.out.println(countMiss);
						letter = input1.nextLine();
						
					}
				}
				if(string.equals(h.toString()) && option.equals("Y")){
					System.out.println("You Win! The Word was: "+string);
					frame.remove(label);
					label = new JLabel("You Win! The Word was: "+string);
					frame.add(label,  BorderLayout.SOUTH);
					frame.validate();
					
					
					System.out.println("play again? Y or N");
					option = input1.nextLine();
					
					if(option.equals("Y")){
						frame.getContentPane().removeAll();
						frame.add(new Panel());
						//frame.remove(label);
						countMiss=0;
						
						
					 
					 string = "";
					 hiddenString = "";
					 try{
						 string = input.next();	//the string takes the word from the next line until it reaches end of line
						 }
						 catch(Exception e){
							 System.out.println("reached the end of file!");
							 System.exit(0);
							 
						 }
					for(int j =0; j<string.length();j++){
						
						hiddenString +=(char)42;
					} 
					h = new StringBuilder(hiddenString);
					label = new JLabel(h.toString());
					frame.add(label, BorderLayout.SOUTH);
					frame.validate();
					System.out.println(string);
					System.out.println(hiddenString);
					
					}
					
					
				}
				else if(countMiss==4){
					System.out.println("You Lose! four misses!");
					frame.remove(label);
					label = new JLabel("You Lose! four misses!");
					frame.add(label,  BorderLayout.SOUTH);
					
					frame.repaint();
					
					
					
					frame.getContentPane().removeAll();
					frame.add(new PanelHang());
					frame.setSize(250,350);
					//label = new JLabel(h.toString());
					frame.add(label, BorderLayout.SOUTH);
					frame.validate();
					System.out.println("play again? Y or N");
					option = input1.nextLine();
					
					if(option.equals("Y")){
						frame.getContentPane().removeAll();
						frame.add(new Panel());
						//frame.remove(label);
						countMiss=0;
						
						
					
					 string = "";
					 hiddenString = "";
					 try{
					 string = input.next();
					 }
					 catch(Exception e){
						 System.out.println("reached the end of file!");
						 System.exit(0);
						 
					 }
					for(int j =0; j<string.length();j++){
						
						hiddenString +=(char)42;
					} 
					h = new StringBuilder(hiddenString);
					label = new JLabel(h.toString());
					frame.add(label, BorderLayout.SOUTH);
					frame.validate();
					System.out.println(string);
					System.out.println(hiddenString);
					
					}
					
				}
				System.out.println(h);
				
			}
			
		}
		System.out.println("Thanks for playing!");
		System.exit(0);
	}
	

}
class Panel extends JPanel{	//Panel class that extends jPanel

	public Panel() {
		
		
		
	}
	protected void paintComponent(Graphics g){
		
		super.paintComponent(g);
		
		g.drawArc(20, getHeight()-50, 100, 50, 0, 180); //the feet, automatically drawn at the beginning
		
		g.drawLine(70,getHeight()-50,70,30);
		g.drawLine(70, 30, 170, 30);
		g.drawLine(170, 30, 170, 70);
		
		if(gameHangMan.countMiss==1){	//when countMiss reaches a specific number(from 1-4) the panel gets redrawn with new parts of body
			
		g.drawArc(155, 70, 30, 30, 0, 360);//head
		g.drawLine(170, 100, 170, 170);
		}
		else if(gameHangMan.countMiss==2){
			
			g.drawArc(155, 70, 30, 30, 0, 360);//head
			g.drawLine(170, 100, 170, 170);
			g.drawLine(170, 170, 185, 195);//legs
			g.drawLine(170, 170, 155, 195);
			}
		else if(gameHangMan.countMiss==3){
			
			
			g.drawArc(155, 70, 30, 30, 0, 360);//head
			g.drawLine(170, 100, 170, 170);
			g.drawLine(170, 170, 185, 195);//legs
			g.drawLine(170, 170, 155, 195);
			//arms
			g.drawLine(170,100,145,140);
			}
else if(gameHangMan.countMiss==4){
			
			
			g.drawArc(155, 70, 30, 30, 0, 360);//head
			g.drawLine(170, 100, 170, 170);
			g.drawLine(170, 170, 185, 195);//legs
			g.drawLine(170, 170, 155, 195);
			g.drawLine(170,100,195,140);//arms
			g.drawLine(170,100,145,140);
			}

	
	}
}
